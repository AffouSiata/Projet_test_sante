generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  phone     String?
  role      Role     @default(PATIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  patientProfile Patient?
  doctorProfile  Doctor?

  @@index([email])
}

model Patient {
  id             String    @id @default(uuid())
  userId         String    @unique
  dateOfBirth    DateTime?
  address        String?
  bloodType      String?
  allergies      String?
  medicalHistory String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointments Appointment[]

  @@index([userId])
}

model Doctor {
  id                 String   @id @default(uuid())
  userId             String   @unique
  specialization     String
  licenseNumber      String   @unique
  bio                String?
  yearsOfExperience  Int?
  consultationFee    Float?
  availability       Json?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointments Appointment[]

  @@index([userId])
  @@index([specialization])
}

model Appointment {
  id        String            @id @default(uuid())
  patientId String
  doctorId  String
  dateTime  DateTime
  duration  Int               @default(30)
  status    AppointmentStatus @default(SCHEDULED)
  reason    String?
  notes     String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor  Doctor  @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@index([patientId])
  @@index([doctorId])
  @@index([dateTime])
  @@index([status])
}
